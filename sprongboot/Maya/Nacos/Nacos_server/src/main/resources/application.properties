#应用级别的配置
server.port=8098
server.servlet.context-path=/val
spring.application.name=zuul_service
#nacos服务端的地址
nacos.config.server-addr=127.0.0.1:8848
#discovery地址
nacos.discovery.server-addr=127.0.0.1:8848


#zuul默认为所有服务开启默认的路由，为了服务安全，此处关闭
#zuul.ignored-services=*
#zuul.routes.cloud-zipkin.service-id=cloud-zipkin
#zuul.routes.cloud-zipkin.path=/zp/**

#zuul.routes.cloud-producer.service-id=cloud-producer
#zuul.routes.cloud-producer.path=/pd/**
#zuul.routes.user_client.service-id=user_client
#prefix ：前缀，当请求匹配前缀时会进行代理
#strip-prefix ：（true 移除）代理前缀默认会从请求路径中移除，通过该设置关闭移除功能，
#zuul.routes.user_client.strip-prefix=true
#zuul.routes.user_client.path=/user_client/**

#ribbon.ReadTimeout: 5000
#ribbon.ConnectTimeout: 5000

#ribbon.maxAutoRetries=1
# 切换实例的重试次数
#ribbon.maxAutoRetriesNextServer=3
# 对所有操作请求都进行重试
#ribbon.okToRetryOnAllOperations=true

# host配置适用于routes 为url请求服务的路由方式,如果是service-id路由方式则配置ribbon
#zuul.host.connect-timeout-millis=6000
#zuul.host.socket-timeout-millis=6000
#zuul.host.max-per-route-connections=2000
#zuul.host.max-total-connections=10000
#zuul.ribbon-isolation-strategy=thread
#zuul.thread-pool.use-separate-thread-pools=true

# 开启保持原始请求参数编码
#  force-original-query-string-encoding: true
# 全局配置请求头参数传递,有效防止会话丢失,即由zuul转发至对应服务处理时,会将配置的请求头一同带过去,默认值"Cookie","Set-Cookie", "Authorization"
#zuul.sensitive-headers=Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Credentials
#开启重定向转链,否则服务重定向时地址变成具体服务的地址,默认false
#  add-host-header: true
#zuul.semaphore.max-semaphores= 5000


#设置ribbon超时(熔断器超时必须大于负载均衡超时时间,否则不生效)
#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
#ribbon.ConnectTimeout=3000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
#ribbon.ReadTimeout= 5000

##该参数用来开启重试机制，默认是关闭
#spring.cloud.loadbalancer.retry.enabled=true
##对所有操作请求都进行重试
#ribbon.OkToRetryOnAllOperations: true
##对当前实例的重试次数
#ribbon.MaxAutoRetries=1
##切换实例的重试次数
#ribbon.MaxAutoRetriesNextServer=1



